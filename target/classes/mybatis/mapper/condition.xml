<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="condition">
	<!--기준정보 -->
	<select id="getStandardInfoList" parameterType="condition" resultType="condition">
		 SELECT *
		    FROM PWO_GEO_DIVISION_DATA
		    
		    <where>
		        <if test="coating_nm != null and coating_nm != ''">
	            	AND COATING_NM LIKE '%'||#{coating_nm}||'%'
		        </if>
		    
		    
		    	<if test="group_id != null and group_id != ''">
	            	AND GROUP_ID LIKE '%'||#{group_id}||'%'
		        </if>
		        <if test="item_cd != null and item_cd != ''">
		            AND ITEM_CD LIKE '%'||#{item_cd}||'%'
		        </if>
		        <if test="item_nm != null and item_nm != ''">
		            AND ITEM_NM LIKE '%'||#{item_nm}||'%'
		        </if>
		        

	    </where>
	</select>
    
<insert id="saveDivisionWeight" parameterType="Condition">
  MERGE INTO PWO_GEO_DIVISION_DATA
  USING DUAL
  ON (
    ITEM_CD = #{item_cd}
  )
  WHEN MATCHED THEN
  UPDATE SET 
    group_id = #{group_id},
    item_nm = #{item_nm},
    mach_main = #{mach_main},
    mach_main_weight = #{mach_main_weight},   
    mach_sub = #{mach_sub},
    mach_sub_weight = #{mach_sub_weight},
    mlpl_weight = #{mlpl_weight},
    coating_nm = #{coating_nm},
    kblack_weight = #{kblack_weight},
    user_id = #{user_id},
    upd_dt = #{upd_dt}
  WHEN NOT MATCHED THEN
  INSERT (
    plac_cd, plnt_cd, group_id, item_cd, item_nm,
    mach_main, mach_main_weight, mach_sub, mach_sub_weight,
    mlpl_weight, coating_nm, kblack_weight,
    user_id, upd_dt
  )
  VALUES (
    #{plac_cd}, #{plnt_cd}, #{group_id}, #{item_cd}, #{item_nm},
    #{mach_main}, #{mach_main_weight}, #{mach_sub}, #{mach_sub_weight},
    #{mlpl_weight}, #{coating_nm}, #{kblack_weight},
    #{user_id}, #{upd_dt}
  )
</insert>


    
        <delete id="delDivisionWeight" parameterType="string">
        DELETE FROM PWO_GEO_DIVISION_DATA 
        WHERE item_cd = #{item_cd}
    	</delete>
    
    
    
    <!--TC조절  -->
    
	<select id="getCorrStatusList" parameterType="map" resultType="Condition">
	    SELECT *
	    FROM tb_corr_status
	    <where>
	       <if test="equipment_name != null and equipment_name != ''">
	            AND equipment_name = #{equipment_name}
	        </if>
	
	        <if test="startDate != null and startDate != ''">
	            AND replacement_date <![CDATA[>=]]> #{startDate}
	        </if>
	        <if test="endDate != null and endDate != ''">
	            AND replacement_date <![CDATA[<=]]> #{endDate}
	        </if>
	    </where>
	    ORDER BY tdatetime DESC
	</select>

        <delete id="delCorrStatus" parameterType="string">
        DELETE FROM tb_corr_status 
        WHERE no = #{no}
    	</delete>
    	
    	
	<update id="saveCorrStatus" parameterType="corrStatus">
	    UPDATE tb_corr_status
	    SET
	        equipment_name = #{equipment_name},
	        location = #{location},
	        serial_number = #{serial_number},
	        replacement_date = #{replacement_date},
	        next_date = #{next_date},
	        replacement_cycle = #{replacement_cycle},
	        remarks = #{remarks}
	    WHERE no = #{no}
	</update>
	
   <!--조건관리  -->
   <select id="getconditionList" parameterType="Condition" resultType="Condition">
    SELECT *
    FROM tb_part_temp
    WHERE 1 = 1
    <if test="startDate != null and startDate != ''">
        AND `date` LIKE CONCAT(#{startDate}, '%')
    </if>
    <if test="mch_code != null and mch_code != ''">
        AND mch_code = #{mch_code}
    </if>
        <if test="p_code != null and p_code != ''">
        AND p_code = #{p_code}
    </if>
   </select>
   
	
	
<update id="machinePartTempUpdate" parameterType="Condition">
    UPDATE tb_part_temp 
    <set>
        <if test="filed == 'specific_gravity'">specific_gravity = #{value},</if>
        <if test="filed == 'visocosity'">visocosity = #{value},</if>
        <if test="filed == 'tank_temp'">tank_temp = #{value},</if>
        <if test="filed == 'chiller_temp'">chiller_temp = #{value},</if>
    </set>
    WHERE id = #{id}
</update>









<select id="getMachineliquidmanage" parameterType="Condition" resultType="Condition">
    SELECT *
    FROM tb_machineliquidmanage
    WHERE 1 = 1
    <if test="in_date != null and in_date != ''">
        AND in_date = #{in_date}
    </if>
    <if test="mch_name != null and mch_name != ''">
        AND mch_name = #{mch_name}
    </if>
</select>

<insert id="insertMachineliquidmanage" parameterType="Condition">
  INSERT INTO tb_machineliquidmanage (
 	id,
    mch_name,
    in_date,
    m68_mixer_no,
    m68_g1_temp,
    m68_g2_temp,
    m68_g1_lot_no,
    m68_g2_lot_no,
    m68_thickener_time,
    m68_thickener_g,
    m68_thickener_lot,
    m68_post_rpm,
    m68_mixing_start_time,
    m68_mixing_time,
    m68_checker,
    m68_mch_temp,
    m68_humidity,
    m68_viscosity,
    m68_out_time,
    kmp_humidity,
    kmp_mixing_temp,
    kmp_mch_temp,
    kmp_liquid_lot_no,
    kmp_mixing_start_time,
    kmp_mixing_time,
    kmp_mch_visc,
    kmp_out_time,
    kmp_checker
  )
  VALUES (
 	#{id},
    #{mch_name},
    #{in_date},
    #{m68_mixer_no},
    #{m68_g1_temp},
    #{m68_g2_temp},
    #{m68_g1_lot_no},
    #{m68_g2_lot_no},
    #{m68_thickener_time},
    #{m68_thickener_g},
    #{m68_thickener_lot},
    #{m68_post_rpm},
    #{m68_mixing_start_time},
    #{m68_mixing_time},
    #{m68_checker},
    #{m68_mch_temp},
    #{m68_humidity},
    #{m68_viscosity},
    #{m68_out_time},
    #{kmp_humidity},
    #{kmp_mixing_temp},
    #{kmp_mch_temp},
    #{kmp_liquid_lot_no},
    #{kmp_mixing_start_time},
    #{kmp_mixing_time},
    #{kmp_mch_visc},
    #{kmp_out_time},
    #{kmp_checker}
  )
  ON DUPLICATE KEY UPDATE
    in_date = VALUES(in_date),
    mch_name = VALUES(mch_name),
    m68_mixer_no = VALUES(m68_mixer_no),
    m68_g1_temp = VALUES(m68_g1_temp),
    m68_g2_temp = VALUES(m68_g2_temp),
    m68_g1_lot_no = VALUES(m68_g1_lot_no),
    m68_g2_lot_no = VALUES(m68_g2_lot_no),
    m68_thickener_time = VALUES(m68_thickener_time),
    m68_thickener_g = VALUES(m68_thickener_g),
    m68_thickener_lot = VALUES(m68_thickener_lot),
    m68_post_rpm = VALUES(m68_post_rpm),
    m68_mixing_start_time = VALUES(m68_mixing_start_time),
    m68_mixing_time = VALUES(m68_mixing_time),
    m68_checker = VALUES(m68_checker),
    m68_mch_temp = VALUES(m68_mch_temp),
    m68_humidity = VALUES(m68_humidity),
    m68_viscosity = VALUES(m68_viscosity),
    m68_out_time = VALUES(m68_out_time),
    kmp_humidity = VALUES(kmp_humidity),
    kmp_mixing_temp = VALUES(kmp_mixing_temp),
    kmp_mch_temp = VALUES(kmp_mch_temp),
    kmp_liquid_lot_no = VALUES(kmp_liquid_lot_no),
    kmp_mixing_start_time = VALUES(kmp_mixing_start_time),
    kmp_mixing_time = VALUES(kmp_mixing_time),
    kmp_mch_visc = VALUES(kmp_mch_visc),
    kmp_out_time = VALUES(kmp_out_time),
    kmp_checker = VALUES(kmp_checker)
</insert>

	
	
	

<select id="getMachineliquidmanage2" parameterType="Condition" resultType="Condition">
    SELECT *
    FROM tb_machineliquidmanage_2
    WHERE 1=1
    <if test="mch_name != null and mch_name != ''">
        AND mch_name = #{mch_name}
    </if>
    <if test="in_date != null and in_date != ''">
        AND in_date = #{in_date}
    </if>
    ORDER BY ck_time DESC
</select>

<!-- insert 매퍼: id 제외 -->
<insert id="insertMachineliquidmanage2" parameterType="Condition">
    INSERT INTO tb_machineliquidmanage_2 (
        id,
        mch_name,
        in_date,
        tank_no,
        ck_time,
        liquid_lot_no,
        liquid_in,
        distilles_in,
        liquid_viscosity,
        specific_gravity,
        viscosity_after,
        ck_time2,
        operator
    )
    VALUES (
        #{id},
        #{mch_name},
        #{in_date},
        #{tank_no},
        #{ck_time},
        #{liquid_lot_no},
        #{liquid_in},
        #{distilles_in},
        #{liquid_viscosity},
        #{specific_gravity},
        #{viscosity_after},
        #{ck_time2},
        #{operator}
    )
    ON DUPLICATE KEY UPDATE
        mch_name = VALUES(mch_name),
        in_date = VALUES(in_date),
        tank_no = VALUES(tank_no),
        ck_time = VALUES(ck_time),
        liquid_lot_no = VALUES(liquid_lot_no),
        liquid_in = VALUES(liquid_in),
        distilles_in = VALUES(distilles_in),
        liquid_viscosity = VALUES(liquid_viscosity),
        specific_gravity = VALUES(specific_gravity),
        viscosity_after = VALUES(viscosity_after),
        ck_time2 = VALUES(ck_time2),
        operator = VALUES(operator)
</insert>



<delete id="deleteMachineliquidmanage" parameterType="int">
    DELETE FROM tb_machineliquidmanage
    WHERE id = #{id}
</delete>
<delete id="deleteMachineliquidmanage2" parameterType="int">
    DELETE FROM tb_machineliquidmanage_2
    WHERE id = #{id}
</delete>



  <!-- 리스트 조회 -->
  <select id="divisionWashingList"
          parameterType="Condition"
          resultType="Condition">
    SELECT
      option01,
      code_name,
      option02,
      option03,
      option05,
      (
        SELECT SUM(NVL(TO_NUMBER(option03), 0))
        FROM pwo_bas_cd
        WHERE GROUP_CODE = 'EZ001'
      ) AS sum_val
    FROM PWO_BAS_CD
    WHERE GROUP_CODE = 'EZ001'
  </select>

  <!-- 업데이트 -->
<update id="divisionWashingUpdate"
        parameterType="Condition">
  UPDATE PWO_BAS_CD
  SET
    option02 = #{option02, jdbcType=VARCHAR},
    option03 = #{option03, jdbcType=VARCHAR},
    option05 = #{option05, jdbcType=VARCHAR}
  WHERE
    GROUP_CODE = 'EZ001'
    AND code_name = #{code_name, jdbcType=VARCHAR}
</update>

<insert id="divisionWashingLog" parameterType="Condition">
    INSERT INTO divisionwashing_log (
        code_name,
        option02,
        option03,
        option05,
        op2_old,
        op3_old,
        op5_old,
        user_id,
        upd_dt,
        log_dt
    )
    VALUES (
        #{code_name},
        #{option02},
        #{option03},
        #{option05},
        #{op2_old},
        #{op3_old},
        #{op5_old},
        #{user_id},
        #{upd_dt},
        NOW()
    )
</insert>


<select id="divisionWashingLogList" parameterType="Condition" resultType="Condition">
    SELECT 
        id,
        code_name,
        option02,
        option03,       
        option05,
        CASE 
            WHEN op2_old IS NULL THEN '""'
            ELSE op2_old
        END AS op2_old,
        CASE 
            WHEN op3_old IS NULL THEN '""'
            ELSE op3_old
        END AS op3_old,
        CASE 
            WHEN op5_old IS NULL THEN '""'
            ELSE op5_old
        END AS op5_old,
        user_id,
        upd_dt,
        log_dt
    FROM 
        divisionwashing_log
    ORDER BY log_dt DESC
</select>

	
</mapper>