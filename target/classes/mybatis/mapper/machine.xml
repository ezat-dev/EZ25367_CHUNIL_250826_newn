<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="machine">

    <!-- //정기점검 계획/실적  -->   
<select id="getMachineList" parameterType="machine" resultType="machine">
    SELECT 
        equipment_name,
        DATE_FORMAT(updated_at, '%Y-%m-%d') AS updated_at,
        item_type,
        m1, m2, m3, m4, m5, m6,
        m7, m8, m9, m10, m11, m12,
        save_url,
        remark
    FROM tb_check_plan
    <where>
        <if test="startDate != null and startDate != ''">
            AND YEAR(created_at) = #{startDate}
        </if>
    </where>
    ORDER BY equipment_name DESC
</select>


<update id="updatecheckPlan" parameterType="machine">
    UPDATE tb_check_plan
    SET 
        equipment_name = #{equipment_name},
        inspection_date = #{updated_at},
        item_type = #{item_type},
        save_url = #{save_url},
        remark = #{remark},
        <if test="m1 != null">m1 = #{m1},</if>
        <if test="m2 != null">m2 = #{m2},</if>
        <if test="m3 != null">m3 = #{m3},</if>
        <if test="m4 != null">m4 = #{m4},</if>
        <if test="m5 != null">m5 = #{m5},</if>
        <if test="m6 != null">m6 = #{m6},</if>
        <if test="m7 != null">m7 = #{m7},</if>
        <if test="m8 != null">m8 = #{m8},</if>
        <if test="m9 != null">m9 = #{m9},</if>
        <if test="m10 != null">m10 = #{m10},</if>
        <if test="m11 != null">m11 = #{m11},</if>
        <if test="m12 != null">m12 = #{m12},</if>
        updated_at = NOW()
    WHERE equipment_name = #{equipment_name}
      AND item_type = #{item_type}
</update>





<select id="getTempDataList" parameterType="temp_data" resultType="temp_data">
    SELECT * 
    FROM tb_temp_data
    <where>
        <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            temp_time BETWEEN #{startDate} AND #{endDate}
        </if>
    </where>
    ORDER BY temp_time
</select>


<select id="getAllDataList" parameterType="machine" resultType="machine">
SELECT * FROM v_moniteolingling
</select>

<select id="getNonTimeDataList" parameterType="machine" resultType="machine">
    SELECT
    	non_time_idx,
        equipment_name,
        machine_code,
        info_list,
        start_time,
      	end_time,
      	non_time_memo
    FROM tb_non_time
    <where>
        <if test="startDate != null and startDate != ''">
            AND start_time &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND start_time &lt;= #{endDate}
        </if>
        <if test="equipment_name != null and equipment_name != ''">
            AND equipment_name = #{equipment_name}
        </if>
    </where>
    ORDER BY start_time DESC
</select>





<insert id="saveNonTime" parameterType="machine">
    INSERT INTO tb_non_time (
        equipment_name,
        machine_code,
        info_list,
        start_time,
        end_time,
        non_time_memo
    )
    VALUES (
        #{equipment_name},
        #{machine_code},
        #{info_list},
        #{start_time},
        #{end_time},
        #{non_time_memo}
    )
</insert>




<update id="updateNonTime" parameterType="machine">
    UPDATE tb_non_time
    SET
        equipment_name = #{equipment_name},
        machine_code = #{machine_code},
        info_list = #{info_list},
        start_time = #{start_time},
        end_time = #{end_time},
        non_time_memo = #{non_time_memo}
    WHERE non_time_idx = #{non_time_idx}
</update>

<delete id="deleteNonTime" parameterType="string">
    DELETE FROM tb_non_time
    WHERE non_time_idx = #{non_time_idx}
</delete>




<select id="getNonTimeDataView" resultType="map">
    SELECT
        main.equipment_name AS v_equipment_name,
        main.info_list AS info_list_v,

        -- 비가동 시간 계산
        SUM(
            TIMESTAMPDIFF(
                MINUTE,
                STR_TO_DATE(main.start_time, '%Y-%m-%d %H:%i'),
                STR_TO_DATE(main.end_time, '%Y-%m-%d %H:%i')
            )
        ) AS sum_time,

        -- 시간:분 형식으로 변환
        CONCAT(
            FLOOR(SUM(
                TIMESTAMPDIFF(
                    MINUTE,
                    STR_TO_DATE(main.start_time, '%Y-%m-%d %H:%i'),
                    STR_TO_DATE(main.end_time, '%Y-%m-%d %H:%i')
                )
            ) / 60), '시간 ',
            SUM(
                TIMESTAMPDIFF(
                    MINUTE,
                    STR_TO_DATE(main.start_time, '%Y-%m-%d %H:%i'),
                    STR_TO_DATE(main.end_time, '%Y-%m-%d %H:%i')
                )
            ) % 60, '분'
        ) AS sum_time_ch,

        -- 하루 기준 최대 발생 건수
        IFNULL(day_counts.max_day_count, 0) AS day_count,

        -- 전체 발생 건수
        COUNT(*) AS month_count

    FROM tb_non_time main

    LEFT JOIN (
        SELECT
            equipment_name,
            info_list,
            MAX(day_count) AS max_day_count
        FROM (
            SELECT
                equipment_name,
                info_list,
                DATE(STR_TO_DATE(start_time, '%Y-%m-%d %H:%i')) AS event_day,
                COUNT(*) AS day_count
            FROM tb_non_time
            WHERE 1 = 1
                <if test="startDate != null and startDate != ''">
                    AND STR_TO_DATE(start_time, '%Y-%m-%d %H:%i') &gt;= #{startDate}
                </if>
                <if test="endDate != null and endDate != ''">
                    AND STR_TO_DATE(end_time, '%Y-%m-%d %H:%i') &lt;= #{endDate}
                </if>
                <if test="equipment_name != null and equipment_name != ''">
                    AND equipment_name = #{equipment_name}
                </if>
            GROUP BY equipment_name, info_list, event_day
        ) AS daily_counts
        GROUP BY equipment_name, info_list
    ) AS day_counts
    ON main.equipment_name = day_counts.equipment_name
    AND main.info_list = day_counts.info_list

    WHERE 1 = 1
        <if test="startDate != null and startDate != ''">
            AND STR_TO_DATE(main.start_time, '%Y-%m-%d %H:%i') &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND STR_TO_DATE(main.end_time, '%Y-%m-%d %H:%i') &lt;= #{endDate}
        </if>
        <if test="equipment_name != null and equipment_name != ''">
            AND main.equipment_name = #{equipment_name}
        </if>

    GROUP BY
        main.equipment_name, main.info_list

    ORDER BY month_count DESC
</select>






<select id="getRepairStatusList" parameterType="Machine" resultType="machine">
    SELECT * FROM (
        SELECT *
        FROM tb_repair_status
        WHERE mch_name = #{mch_name}

        UNION ALL

        SELECT *
        FROM tb_repair_status
        WHERE NOT EXISTS (
            SELECT 1 FROM tb_repair_status WHERE mch_name = #{mch_name}
        )
        LIMIT 100
    ) AS sub
    ORDER BY insert_date DESC
</select>

<insert id="insertRepairStatus" parameterType="Machine">
    INSERT INTO tb_repair_status (
        mch_name,
        mch_code,
        `check`,
        maintenance,
        content,
        result,
        remarks,
        insert_date
    )
    VALUES (
        #{mch_name},
        #{mch_code},
        #{check},
        #{maintenance},
        #{content},
        #{result},
        #{remarks},
        NOW()
    )
    ON DUPLICATE KEY UPDATE
        `check` = VALUES(`check`),
        maintenance = VALUES(maintenance),
        result = VALUES(result),
        remarks = VALUES(remarks),
        insert_date = CURRENT_TIMESTAMP
</insert>

  <delete id="deleteRepairStatus" parameterType="int">
    DELETE FROM tb_repair_status WHERE no = #{no}
  </delete>



</mapper>