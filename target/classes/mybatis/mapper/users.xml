<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="users">

	<select id="userLoginCheck" parameterType="users" resultType="users">
		SELECT *
		FROM tb_user
		WHERE user_id = #{user_id} AND user_pw = #{user_pw} AND user_yn = 'Y'
	</select>
	
	<!-- 선택한 사용자 권한조회 -->
	<select id="userLoginPermission" parameterType="users" resultType="permission">
		SELECT *
		FROM tb_permission
		WHERE user_code = #{user_code}
	</select>
	
	
	<!-- 전체 사용자 목록 조회 -->
	<select id="userPermissionUserSelect" parameterType="users" resultType="users">
        SELECT *
        FROM tb_user
        WHERE user_level <![CDATA[<>]]> 0 AND user_yn = 'Y'
    </select>
	
	<!-- 전체 사용자 목록 조회 -->
	<select id="userInsertSelect" parameterType="users" resultType="users">
        SELECT *
        FROM tb_user
        WHERE user_yn = 'Y'
    </select>
 
    
    <!-- 작업자등록 -->
    <insert id="userInsertInsert" parameterType="users">
    	INSERT INTO tb_user (user_id, user_pw, user_name, user_level, user_busu, user_jick, user_phone)
    	VALUES (#{user_id}, #{user_pw}, #{user_name}, #{user_level}, #{user_busu}, #{user_jick}, #{user_phone});
    	
	</insert>
	
	<!-- 중복된 사용자인지 확인 -->
	<select id="userDuplicateCheck" parameterType="users" resultType="users">
		SELECT *
		FROM tb_user
		WHERE user_yn = 'Y'
		AND user_id = #{user_id}
	</select>


	<!-- 선택한 사용자 권한수정 -->
	<update id="userPermissionUpdate" parameterType="permission">
		UPDATE tb_permission SET 
		       a01 = #{a01}, 
		       a02 = #{a02}, 
		       a03 = #{a03}, 
		       a04 = #{a04}, 
		       a05 = #{a05}, 
		       a06 = #{a06}, 
		       a07 = #{a07}, 
		       b01 = #{b01},
		       b02 = #{b02}, 
		       b03 = #{b03}, 
		       b04 = #{b04}, 
		       b05 = #{b05}, 
		       b06 = #{b06}, 
		       b07 = #{b07}, 
		       c01 = #{c01}, 
		       c02 = #{c02}, 
		       c03 = #{c03}, 
		       c04 = #{c04}, 
		       c05 = #{c05}, 
		       c06 = #{c06}, 
		       c07 = #{c07}, 
		       d01 = #{d01}, 
		       d02 = #{d02},
		       d03 = #{d03},
		       d04 = #{d04},
		       d05 = #{d05},
		       d06 = #{d06},
		       d07 = #{d07},
		       e01 = #{e01},
		       e02 = #{e02}, 
		       e03 = #{e03}, 
		       e04 = #{e04},  
		       e05 = #{e05},  
		       e06 = #{e06},
		       e07 = #{e07},
		       f01 = #{f01},
		       f02 = #{f02}, 
		       f03 = #{f03}, 
		       f04 = #{f04}, 
		       f05 = #{f05},  
		       f06 = #{f06},  
		       f07 = #{f07},  
		       g01 = #{g01},
		       g02 = #{g02}, 
		       g03 = #{g03}, 
		       g04 = #{g04}, 
		       g05 = #{g05}, 
		       g06 = #{g06}, 
		       g07 = #{g07}, 
		       h01 = #{h01},
		       h02 = #{h02}, 
		       h03 = #{h03}, 
		       h04 = #{h04}, 
		       h05 = #{h05}, 
		       h06 = #{h06}, 
		       h07 = #{h07},
		       i01 = #{i01},
		       i02 = #{i02},
		       i03 = #{i03},
		       i04 = #{i04},
		       i05 = #{i05},
		       i06 = #{i06},
		       i07 = #{i07},
		       i05 = #{i05},
	           i06 = #{i06},
	           i07 = #{i07},
	           j01 = #{j01},
	           j02 = #{j02},
	           j03 = #{j03},
	           j04 = #{j04},
	           j05 = #{j05},
	           j06 = #{j06},
	           j07 = #{j07},
	           k01 = #{k01},
	           k02 = #{k02},
	           k03 = #{k03},
	           k03 = #{k04},
	           k03 = #{k05},
	           k03 = #{k06}
		 WHERE user_code = #{user_code}	
	</update>
	
	<!-- 유저메뉴 (카운트 수가 10개 미만인지) -->
	<select id="userMenuCount" parameterType="userMenu" resultType="int">
		SELECT COUNT(*) AS ccnt
		FROM tb_usermenu
		WHERE 1=1
		AND menu_yn = 'Y'
		AND user_code = #{user_code}
	</select>
	
	<!-- 유저메뉴 (이미 추가되어 있는 메뉴인지) -->
	<select id="userMenuCheck" parameterType="userMenu" resultType="string">
		SELECT menu_yn
		FROM tb_usermenu
		WHERE 1=1
		AND user_code = #{user_code}
		AND menu_url = #{menu_url}
	</select>

	<!-- 유저메뉴 (추가되어 있지 않다면 INSERT) -->
	<insert id="userLoginMenuSave" parameterType="userMenu">
		INSERT INTO tb_usermenu (user_code, menu_url, menu_name, insert_date)
		VALUES
		(#{user_code}, #{menu_url}, #{menu_name}, NOW())
	</insert>
	
	<update id="userLoginMenuUpdate" parameterType="userMenu">
		UPDATE tb_usermenu SET menu_yn = 'Y', update_date = NOW()
		WHERE 1=1
		AND user_code = #{user_code}
		AND menu_url = #{menu_url}
	</update>
	
	<select id="userMenuList" parameterType="userMenu" resultType="userMenu">
		SELECT *
		FROM tb_usermenu
		WHERE 1=1
		AND user_code = #{user_code}
		AND menu_yn = 'Y'
	</select>	
	
	
	<select id="equipment_name_select" parameterType="facility" resultType="facility">
    SELECT 
        facility_code, 
        facility_name, 
        facility_comment, 
        facility_yn,
        facility_mach_code
    FROM tb_facility
    WHERE facility_yn = 'Y'
    ORDER BY facility_code
	</select>
	
	
	<update id="userLoginMenuRemove" parameterType="userMenu">
		UPDATE tb_usermenu SET menu_yn = 'N'
		WHERE 1=1
		AND user_code = #{user_code}
		AND menu_url = #{menu_url}
	</update>
	
	
	
	
	
	

 <select id="getplanManageList"
          parameterType="Users"
          resultType="Users">
    SELECT
      no,
      u_code,
      duty,
      employee_no,
      name,
      education,
      career,
      training,
      cert_name,
      acquisition_date,
      next_date,
      file_name,
      start_day,
      note
    FROM tb_plan_manage
    <where>
      <if test="name != null and name != ''">
        AND name LIKE CONCAT('%', #{name}, '%')
      </if>
      <if test="startDate != null and startDate != ''">
        AND start_day &gt;= #{startDate}
      </if>
      <if test="endDate != null and endDate != ''">
        AND start_day &lt;= #{endDate}
      </if>
    </where>
    ORDER BY acquisition_date DESC
  </select>
  
  
  
  
  
  
	<insert id="insertplanManage" parameterType="Users" useGeneratedKeys="true" keyProperty="no">
	  INSERT INTO tb_plan_manage (
	    no,
	    u_code,
	    duty,
	    employee_no,
	    name,
	    education,
	    start_day,
	    career,
	    training,
	    cert_name,
	    acquisition_date,
	    next_date,
	    file_name,
	    note
	  ) VALUES (
	    #{no},      
	    #{u_code},
	    #{duty},
	    #{employee_no},
	    #{name},
	    #{education},
	    #{start_day},
	    #{career},
	    #{training},
	    #{cert_name},
	    #{acquisition_date},
	    #{next_date},
	    #{file_name},
	    #{note}
	  )
	  ON DUPLICATE KEY UPDATE
	    u_code           = VALUES(u_code),
	    duty             = VALUES(duty),
	    employee_no      = VALUES(employee_no),
	    name             = VALUES(name),
	    education        = VALUES(education),
	    start_day        = VALUES(start_day),
	    career           = VALUES(career),
	    training         = VALUES(training),
	    cert_name        = VALUES(cert_name),
	    acquisition_date = VALUES(acquisition_date),
	    next_date        = VALUES(next_date),
	    file_name        = VALUES(file_name),
	    note             = VALUES(note)
	</insert>



    <delete id="delplanManage" parameterType="Users">
        DELETE FROM tb_plan_manage
        WHERE no = #{no}
    </delete>
    
    
    <select id="getUserInfo" resultType="Users">
        SELECT *
        FROM tb_permission
    </select>
</mapper>